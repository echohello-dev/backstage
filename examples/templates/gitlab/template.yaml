apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: docs-template-gitlab
  title: Documentation Template in GitLab
  tags:
    - docs
    - example
    - gitlab
  description: |
    This template creates a new documentation site in a GitLab repository.
spec:
  owner: team-c
  type: documentation

  parameters:
    - title: Fill in some steps
      required:
        - owner
      properties:
        description:
          title: Description
          type: string
          description: Description of the component
          ui:placeholder: A short description of the component
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: [Group, User]

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            requestUserCredentials:
              secretsKey: USER_OAUTH_TOKEN
            allowedHosts:
              - github.com
            allowedOwners:
              - echohello-dev
            allowedOrganizations:
              - echohello-dev

  steps:
    - id: template
      name: Fetch Template
      action: fetch:template
      input:
        url: ./template
        targetPath: ${{ parameters.targetPath }}
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}

    - id: publish
      name: Publish to GitLab
      action: publish:gitlab
      input:
        repoUrl: gitlab.com?repo=${{ parameters.name }}&owner=echohello
        description: This is the ${{ parameters.name }} component
        token: ${{ secrets.USER_OAUTH_TOKEN }}
        gitAuthorName: ${{ user.entity.metadata.name }}
        gitAuthorEmail: ${{ user.entity.spec.profile.email }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
    text:
      - title: More information
        content: |
          **Entity URL:** `${{ steps['publish'].output.remoteUrl }}`
