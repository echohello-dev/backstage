apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: github-blank-repo
  title: GitHub Blank Repo
  tags:
    - recommended
    - example
    - github
  description: |
    This template creates a new blank repository in GitHub.
    It fetches a template from the local filesystem, and then publishes the result to a new repository.
spec:
  owner: team-b
  type: service

  parameters:
    - title: Fill in some steps
      required:
        - owner
      properties:
        description:
          title: Description
          type: string
          description: Description of the component
          ui:placeholder: A short description of the component
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: [Group, User]

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            requestUserCredentials:
              secretsKey: USER_OAUTH_TOKEN
            allowedHosts:
              - github.com
            allowedOwners:
              - echohello-dev
            allowedOrganizations:
              - echohello-dev

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: ${{ parameters.description }}
        repoUrl: ${{ parameters.repoUrl }}
        token: ${{ secrets.USER_OAUTH_TOKEN }}
        gitAuthorName: ${{ user.entity.metadata.name }}
        gitAuthorEmail: ${{ user.entity.spec.profile.email }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
    text:
      - title: More information
        content: |
          **Entity URL:** `${{ steps['publish'].output.remoteUrl }}`
